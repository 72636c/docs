# API Overview

The Buildkite REST API aims to give you complete programmatic access and control of Buildkite to extend, integrate and automate anything to suit your particular needs.

The current version of the Buildkite API is v2.

<%= toc %>

## Schema

All API access is over HTTPS, and accessed from the `api.buildkite.com` domain. All data is sent as JSON.

```bash
curl https://api.buildkite.com
```

```json
<%= present_json response: "Hello World" %>
```

## Parameters and Properties

Some API methods take parameters and/or properties. Many have parameters within the path of the URI, such as 'my-org' and 'my-pipeline' in the following request:

```bash
curl "https://api.buildkite.com/v2/organizations/my-org/pipelines/my-pipeline/builds"
```

For GET requests, additional parameters can be supplied as HTTP query string parameters:

```bash
curl "https://api.buildkite.com/v2/organizations/my-org/pipelines/my-pipeline/builds?state=passed"
```

For POST, PATCH, PUT, and DELETE requests, there are path parameters but query parameters are not accepted. Additional properties should be encoded as JSON with the Content-Type 'application/json':

```bash
curl -X POST "https://api.buildkite.com/v2/organizations/my-org/pipelines/my-pipeline/builds" \
  -d '{
    "commit": "abcd0b72a1e580e90712cdd9eb26d3fb41cd09c8",
    "branch": "master",
    "message": "Testing all the things :rocket:"
  }'
```

## Authentication

There are two ways to authenticate with the Buildkite API: access tokens and basic authentication.

### Access Tokens

API access tokens allow to call the API without using your username and password. They can be created on your <a href="<%= url_helpers.user_access_tokens_url %>">API Access Tokens</a> page, limited to individual organizations and permissions, and revoked at any time.

To authenticate using a token pass it in the <code>access_token</code> query parameter or in the <code>Authorization</code> HTTP request header.

To authenticate using an <code>access_token</code> query parameter:

```bash
curl "https://api.buildkite.com/v2/user?access_token=xxxx"
```

To authenticate using the <code>Authorization</code> HTTP header set the value be the word <code>Bearer</code>, followed by a space, followed by the access token. For example:

```bash
curl -H "Authorization: Bearer xxxx" https://api.buildkite.com/v2/user
```

### Basic Authentication

You can authenticate with your email and password using basic authentication. This is designed for direct testing of the API and should only be used where access token authentication does not make sense.

```
curl -u "your@email.com" https://api.buildkite.com/v2/user

Enter host password for user 'your@email.com':
```

```json
<%= api_response_example :user %>
```

## Pagination

For endpoints which support pagination, the pagination information can be found in the `Link` HTTP response header containing one or more of `next`, `prev`, `first` and `last`.

```bash
curl -i "https://api.buildkite.com/v2/organizations/my-great-org/pipelines/my-pipeline/builds"
```

```
HTTP/1.1 200 OK
...
Link: <https://api.buildkite.com/v2/organizations/my-great-org/pipelines/my-pipeline/builds?api_key=f8582f070276d764ce3dd4c6d57be92574dccf86&page=3>; rel="next", <https://api.buildkite.com/v2/organizations/my-great-org/pipelines/my-pipeline/builds?api_key=f8582f070276d764ce3dd4c6d57be92574dccf86&page=6>; rel="last"
```

You can set the page using the following query string parameters:

<table>
<tbody>
  <tr><th><code>page</code></th><td>The page of results to return<p class="Docs__api-param-eg"><em>Default:</em> <code>1</code></p></td></tr>
  <tr><th><code>per_page</code></th><td>How many results to return per-page<p class="Docs__api-param-eg"><em>Default:</em> <code>30</code></p><p class="Docs__api-param-eg"><em>Maximum:</em> <code>100</code></p></td></tr>
</tbody>
</table>

## CORS Headers

API responses include the following [CORS headers](https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS) allowing you to use the API directly from the browser:

* `Access-Controller-Allow-Origin: *`
* `Access-Control-Expose-Headers: Link`

For an example of this in use, see the [Emojis API example on CodePen](http://codepen.io/toolmantim/pen/xbQRaL) for adding emoji support to your own browser-based dashboards and build screens.

## Migrating from v1 to v2

The following changes were made in v2 of our API:

- <code>POST /v1/organizations/{org.slug}/agents</code> has been removed
- <code>DELETE /v1/organizations/{org.slug}/agents/{id}</code> has been removed
- All project-related properties in JSON responses and requests have been renamed to pipeline
- The <code>featured_build</code> pipeline property has been removed
- The deprecated <code>/accounts</code> URL has been removed
- URLS containing <code>/projects</code> have been renamed to <code>/pipelines</code>

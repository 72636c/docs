# Single Sign-On with Azure Active Directory (Azure AD)

Azure Active Directory can be used an an SSO provider for your Buildkite organization. To complete this tutorial, you will need admin privileges for both Azure and Buildkite.

<div class="Docs__note">
  <p>You can also set up SSO providers manually with GraphQL. See the <a href="/docs/integrations/sso/sso-setup-with-graphql">SSO Setup with GraphQL Guide</a> for detailed instructions and code samples.</p>
</div>

## Step 1. Create a Buildkite SSO Provider

Click the Buildkite Organization Settings' Single Sign On menu item, then choose the Custom SAML provider from the available options:

<%= image "sso-settings.png", width: 1716/2, height: 884/2, alt: "Screenshot of the Buildkite SSO Settings Page" %>

Choose the 'Provide IdP Metadata Later' option when configuring your Custom SAML Provider:

On the following page, copy the ACS URL for use in Step 2.

## Step 2. Add Buildkite in Azure AD

Log into your Azure Admin Console, and follow these instructions:

1. Choose 'Azure Active Directory'
1. Under 'Quick actions', choose 'Add enterprise application'
1. Click '+ Create your own application
1. Give your application a name, for example 'Buildkite'.
1. Choose 'Integrate any other application you don't find in the gallery (Non-gallery)' and click 'Create'
1. Choose '2. Set up single sign on'
1. Choose 'SAML'
1. Choose 'Edit' in the 'Basic SAML Configuration' box
1. Enter the following configuration and click Save:
    * Identifier (Entity ID): https://buildkite.com
    * Reply URL (Assertion Consumer Service URL): the ACS URL you copied in Step 1
1. Copy the 'App Federation Metadata Url' value from the 'SAML Signing Certificate' box

## Step 3. Update your Buildkite SSO Provider

On your Buildkite Organization Settings' Single Sign On page, select your Custom SAML provider from the list of Configured SSO Providers.

Click the 'Edit Settings' button, choose the 'Configure Using IdP Meta Data URL' option and enter the 'App Federation Metadata Url' you copied in Step 2.

Save your new settings and you'll be returned to your provider page.

## Step 3. Perform a Test Login

Follow the instructions on the provider page to perform a test login. Performing a test login will verify that SSO is working correctly before you activate it for your organization members.

If you receive an error from Microsoft about the user not being assigned to the application, you can assign an initial user:

1. Return to the Azure Admin Console and select the new 'Buildkite' enterprise app
1. Choose 'Users and groups' from the navigation sidebar
1. Click 'Add user/group'
1. Select the user and click 'Assign'

Then, retry the test login from to SSO provider page on Buildkite.

## Step 4. Enable the new SSO Provider

Once you've performed a test login you can enable your provider using the `Enable` button. Activating SSO will not force a log out of existing users, but will cause all new or expired sessions to authorize through Cloud Identity before organization data can be accessed.

If you need to edit or update your Azure Active Directory provider settings at any time, you will need to disable the provider first. For more information on disabling a provider, see the [disabling SSO](/docs/integrations/sso#disabling-and-removing-sso) section of the SSO overview.

## Using SCIM to provision and manage users

<div class="Docs__note">
  <p>This integration with AzureAD is currently available only to a limited number of customers. Contact support@buildkite.com to learn more.</p>
</div>

### Supported SCIM Features

* Create Users (note that users added to Okta won't be billed for until they have signed up with Buildkite)
* Deactivate Users (Deprovisioning)

### Configuration instructions

Using the SCIM provisioning settings in AzureAD, Enterprise customers can automatically remove user accounts from your Buildkite organization. In AzureAD this feature is called 'Provisioning'. You need an enabled AzureAD SSO Provider before you can set up SCIM.

After creating your SSO Provider in Buildkite, you will need the  _Base URL_ and _API Token_ from your AzureAD SSO Provider Settings:

<%= image "azuread-scim-settings.png", width: 1440/2, height: 548/2, alt: "Screenshot of the Buildkite Settings SCIM Deprovisioning section" %>

Go to your Buildkite application in AzureAD to set up provisioning:

1. Return to the Azure Admin Console and select the new 'Buildkite' enterprise app
1. Choose 'Provisioning' from the navigation sidebar
1. Click 'Get started'
1. Select 'Automatic' provisioning mode and enter the following details:
    * Tenant URL: the Base URL from your Buildkite SSO Provider settings
    * Secret Token: the API Token from your Buildkite SSO Provider settings
1. Click 'Test Connection'
1. Click 'Save' once you receive confirmation the settings are valid
1. Disable Group synchronization:
    * Expand 'Mappings'
    * Click 'Provision Azure Active Directory Groups'
    * Toggle 'Enabled' to 'No' and click 'Save'
    * Return to provisioning setttings
1. Customise the User mappings
    * Expand 'Mappings'
    * Click 'Provision Azure Active Directory Users'
    * Click the first row of the 'Attribute Mappings' table ('userPrincipalName'), change the 'Source attribute' to 'mail' and click 'OK'
    * Delete all remaining mappings except for the four listed in the following screenshot:
    <%= image "azuread-user-mappings.png", width: 1440/2, height: 548/2, alt: "Screenshot of the required user mappings on Azure" %>
    * Click 'Save'
    * Return to provisioning setttings
1. Toggle 'Provisioning Status' to 'On'
1. Click 'Save'
1. Return to the `Provisioning` menu of the enterprise app and view the 'Current cycle status' section.
    * If provisioning is working, this should say 'Initial cycle completed'
    * If errors are displayed, click 'View provisioning logs' and for further details on what went wrong



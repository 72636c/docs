# Phabricator

[Phabricator](https://phacility.com/phabricator/) can trigger Buildkite builds on new revisions through Habormaster.

Phabricator and Buildkite integrate using webhooks. Phabricator triggers builds in Buildkite with webhooks, then Buildkite reports the status back to Phabricator also using webhooks.

<%= toc %>

## Prerequisites

Check that your repository is activated in your Phabricator instance and
Habormaster is installed. Configure a pipeline for that repository in Buildkite. You'll also need to create a Buildkite API Access Token.

<div class="Docs__note">
	<p>Admin access in both Phabricator and your Buildkite organization will be required.</p>
</div>

## Step 1: New Phabricator Build Step

Create a new Build Plan in Harbormaster.

Inside Habormaster open "Manage Build Plans". Click "Create Build Plan" located in the upper right.

<%= image "phabricator_create_build_plan.png", width:958/2, height:388/2, alt: "Creating a new Build Plan in Phabricator" %>

Provide a name then click "Create Build Plan".

Next, add a step to the Build Plan. A Phabricator "Build Step" creates a build on one Buildkite "pipeline". If you need to create builds on multiple pipelines, create multiple Build Steps.

<%= image "phabricator_run_in_buildkite.png", width:943/2, height:427/2, alt: "Selecting Buildkite for this Build Step" %>

Click "Add Build Step" on the next screen. Then select "Build with Buildkite".

<%= image "phabricator_blank_build_step.png", width:824/2, height:969/2, alt: "Incomplete Build Step" %>

Keep this screen open while you configure Buildkite.

## Step 2: Configure Buildkite Notification Webhook

Create a [new API Access Token](https://buildkite.com/user/api-access-tokens/new) in your Buildkite Personal Settings.

Provide a description, then select your organization. Select the `read_builds` and `write_builds` scopes. Create the token, then copy the token from the subsequent screen.

<%= image "buildkite_new_api_access_token.png", width:755/2, height:726/2, alt: "Creating a new Buildkite API Access Token" %>

Next, add a "Webhook Notification" in your Buildkite organization's Notification Services.

From Phabricator's "Webhook Configuration", copy the "Webhook URL" (it should end in `/harbormaster/hook/buildkite/`) and paste it into the "Webhook URL" field in Buildkite. Take a copy of the autogenerated value in the "Token" field in Buildkite.  Select the `build.finished` Event, then save the notification settings.

<%= image "buildkite_notification_webhook_settings.png", width:789/2, height:776/2, alt: "Buildkite Notification Webhook settings" %>

## Step 3: Complete Phabricator Build Step

In Phabricator, click the "Add New Credential" button next to "API Token". Provide a name and use the Buildkite API Access Token that you created earlier for the "Token" field.

<%= image "phabricator_new_credential.png", width:860/2, height:591/2, alt: "Creating a new Credential in Phabricator" %>

Fill in the Buildkite "Organization Name" and "Pipeline Name". Use the Token
from Buildkite's Notfication Webhook for "Webhook Token" in Phabricator.

<%= image "phabricator_build_step.png", width:774/2, height:406/2, alt: "Completing the Phabricator Build Step" %>

Finally, click "Create Build Step".

## Step 4: Test with a Manual Build

Click "Run Plan Manually" on the next screen. Provide a revision ID from the repository inside Phabricator.

<%= image "phabricator_manual_build_trigger.png", width:932/2, height:367/2, alt: "Run a manual build in Phabricator" %>

Your Buildkite pipeline should run, then report back to Phabricator.

<%= image "phabricator_build_status.png", width:625/2, height:468/2, alt: "Build status in Phabricator" %>
<%= image "buildkite_pipeline.png", width:737/2, height:526/2, alt: "Build status in Buildkite" %>

## Step 4: Configure builds on new commits

The Herald application acts as a "trigger" inside Phabricator. You can create a Herald rule that runs your Build Step on new commits.

Open Herald, and click "Create Herald Rule". Select "Commits" on the next
screen, then select "Object" on the screen after that. This allows you to connect a rule to a specific repository which you'll configure on the next screen.

Fill in  the repository name. It should start with "r", so this example is using `rDEMO`.

<%= image "phabricator_create_rule.png", width:970/2, height:383/2, alt: "Create a Herald Rule" %>

Finally, configure an action associated with this rule. Adding conditions is optional, but you could use this to, for example, limit builds to specific branches.

Select "Run Build Plan", then provide the Build Plan created in the previous step. Finally, press "Save Rule".

<%= image "phabricator_configure_action.png", width:961/2, height:613/2, alt: "Configure Rule Action" %>

Now that your setup is complete, every time there is a new commit in your repository a build will be run on your Buildkite pipeline and the status will appear in Phabricator.

[phabricator]: https://phacility.com/phabricator/

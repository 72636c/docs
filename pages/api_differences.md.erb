# API Differences Between REST and GraphQL

Buildkite supports the use of both [REST](https://buildkite.com/docs/apis/rest-api) and [GraphQL](/docs/apis/graphql-api), but there is no full parity in the API between the two. Certain actions can only be performed using the REST API, but not GraphQL, and vice versa.

{:toc}

If you are only deciding which approach to take, you could consider GraphQL as your default answer to "how do I query a possibly-complicatedly-constrained subset of data?", and REST should be most helpful in a scenario of creating and modifying records.

On this page we've collected the known limitation where some API features are only available with either REST or GraphQL.

## Exclusive REST-only features

* Buildkite's terraform provider uses GraphQL where it can, but it falls back to using REST for setting `branch_configuration` and `github provider configuration` on pipelines.
* REST API can [retrieve and list annotations](/docs/apis/rest-api/annotations) on a build, but not create them (however, you can create the annotations using the [`buildkite-agent annotate` command](/docs/agent/v3/cli-pipeline) from within a job).
* [Provider setting properties](/docs/apis/rest-api/pipelines#provider-settings-properties) `provider_settings` allows configuring how the pipeline is triggered based on source code provider events; available on pipeline create (available for all the pipeline inputs).
* REST API supports [job logs](/docs/apis/rest-api/jobs#get-a-jobs-log-output).

## Exclusive GraphQL-only features

* Removing users from an organization.
* [Setting up SSO](/docs/integrations/sso/sso-setup-with-graphql).
* Retrieving, listing, and creating annotations on a build.
* [Creating and revoking](/docs/apis/rest-api/access-token) user API tokens (while REST can only revoke user API tokens).
* Creating and managing pipeline schedules.
* Managing teams.
* Listing audit log events.
* Filtering results from pipeline listings.
* [Provider setting properties](/docs/apis/rest-api/pipelines#provider-settings-properties) `provider_settings` are _not_ available in GraphQL.

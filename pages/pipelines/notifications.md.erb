# Triggering Notifications

The `notify` attribute allows you to trigger build notifications to different services. You can also choose to conditionally send notifications based on pipeline events like build state.

{:toc}

Add notifications to your pipeline with the `notify` attribute. This sits at the same level as `steps` in your pipeline YAML.

For example, to send a notification email every time a build is created:

```yaml
steps:
  - command: "tests.sh"

notify:
  - email: "dev@acmeinc.com"
```
{: codeblock-file="pipeline.yml"}

Available notification types:
<!-- vale off -->
* [Email](#email): Send an email to the specified email address.
* [Basecamp](#basecamp-campfire-message): Post a message to a Basecamp Campfire. Requires a Basecamp Chatbot to be configured in your Basecamp organization.
* [Basecamp campfire message](#basecamp-campfire-message):
* [Slack](#slack-channel-and-direct-messages): Post a message to the specified Slack Channel. Requires a Slack notification service to be enabled for each channel.
* [GitHub check](#github-check): Use the `pipeline.yml` to tell Buildkite to add details of checks to pull requests. Refer to [GitHub - Manually add check details using `github_check`](/docs/integrations/github#manually-add-check-details-using-github_check) for detailed guidance.
* [GitHub commit status](#github-commit-status): Customize the commit status that Buildkite displays on GitHub commits and pull requests. Refer to [GitHub - Customizing commit statuses](/docs/integrations/github#customizing-commit-statuses) for detailed guidance.
* [GitHub pull request comment](#github-pull-request-comment): Refer to [GitHub - Add comments to GitHub pull requests](/docs/integrations/github#add-comments-to-github-pull-requests) for detailed guidance.
* [Webhooks](#webhooks): Send a notification to the specified webhook URL.
* [PagerDuty](#pagerduty-change-events)
<!-- vale on -->
## Conditional notifications

To only trigger notifications under certain conditions, add the `if` attribute.

For example, the following email notification will only be triggered if the build passes:

```yaml
notify:
  - email: "dev@acmeinc.com"
    if: build.state == "passed"
```
{: codeblock-file="pipeline.yml"}

See [Build States](#build-states) for possible values for the build state.

<section class="Docs__troubleshooting-note">
  <p>To trigger conditional notifications to a Slack channel, you will first need to configure <a href="/docs/integrations/slack#conditional-notifications">Conditional notifications for Slack</a>.
</section>

## Email

Add an email notification to your pipeline using the `email` attribute of the `notify` yaml block:

```yaml
notify:
  - email: "dev@acmeinc.com"
```
{: codeblock-file="pipeline.yml"}

The `email` attribute accepts a single email address as a string. To send notifications to more than one address, add each address as a separate email notification attribute:

```yaml
notify:
  - email: "dev@acmeinc.com"
  - email: "sre@acmeinc.com"
  - email: "qa@acmeinc.com"
```
{: codeblock-file="pipeline.yml"}

Email notifications happen at the following [event](/docs/apis/webhooks#events):

* `build finished`

## Basecamp Campfire message

To send notifications to a Basecamp Campfire, you'll need to set up a chatbot in Basecamp as well as adding the notification to your `pipeline.yml` file. Basecamp admin permission is required to setup your chatbot.

<section class="Docs__troubleshooting-note">
  <p>Campfire messages can only be sent using Basecamp 3.</p>
</section>

1. Add a [chatbot](https://m.signalvnoise.com/new-in-basecamp-3-chatbots/) to the Basecamp project or team that you'll be sending notifications to.
1. Set up your chatbot with a name and an optional URL. If you'd like to include an image, you can find the Buildkite logo in our [Brand Assets](https://buildkite.com/brand-assets).
1. On the next page of the chatbot setup, copy the URL that Basecamp provides in the `curl` code snippet
1. Add a Basecamp notification to your pipeline using the `basecamp_campfire` attribute of the `notify` yaml block and the URL copied from your Basecamp chatbot:

```yaml
notify:
  - basecamp_campfire: "https://3.basecamp.com/1234567/integrations/qwertyuiop/buckets/1234567/chats/1234567/lines"
```
{: codeblock-file="pipeline.yml"}

The `basecamp_campfire` attribute accepts a single URL as a string.

Basecamp notifications happen at the following [events](/docs/apis/webhooks#events), unless you restrict them using [conditionals](/docs/pipelines/notifications#conditional-notifications):

* `build created`
* `build started`
* `build blocked`
* `build finished`
* `build skipped`

## Slack channel and direct messages

If you need fine-grained control over your notifications, or want to send notifications triggered by non-build events, the [Slack Notification Service](/docs/integrations/slack) can be extended using the `notify` attribute.

If you only need to send notifications on build status events, you can set this up in Buildkite using your [Slack Notification Service's](/docs/integrations/slack) 'Build State Filtering' settings.

Before adding a `notify` attribute to your `pipeline.yml`, ensure an organization admin has set up a [Slack integration](/docs/integrations/slack) for the channel or user that you want to post to. For detailed information about setting up a Notification Service, see the [Slack integration page](/docs/integrations/slack).

Once a slack channel has been configured in your organization, add a Slack notification to your pipeline using the `slack` attribute of the `notify` yaml block.

<section class="Docs__troubleshooting-note">
  <p>When using just a channel name, you must specify it in quotes, as otherwise the <code>#</code> will cause the channel name to be treated as a comment.</p>
</section>

For example, to deliver notifications to the `#general` channel of all configured workspaces:

```
notify:
  - slack: "#general"
```
{: codeblock-file="pipeline.yml"}

For example, to deliver notifications to user `@someuser` in all configured workspaces:

```
notify:
  - slack: "@someuser"
```
{: codeblock-file="pipeline.yml"}

To send a notification to one particular workspace and channel or workspace and user, specify the workspace name as well:

For channels

```yaml
notify:
  # Notify channel
  - slack: "buildkite-community#general"
  # Notify user
  - slack: "buildkite-community@someuser"
```
{: codeblock-file="pipeline.yml"}

You can also specify multiple teams and channels with the `channels` attribute:

```yaml
notify:
  - slack:
      channels:
        - "buildkite-community#sre"
        - "buildkite-community#announcements"
        - "buildkite-team#monitoring"
        - "#general"
```
{: codeblock-file="pipeline.yml"}

To add a custom message to the notification:

```yaml
notify:
  - slack:
      channels:
        - "buildkite-community#sre"
      message: "SRE related information here..."
  - slack:
      channels:
        - "buildkite-community#announcements"
      message: "General announcement for the team here..."
```
{: codeblock-file="pipeline.yml"}

You can also add [conditionals](/docs/pipelines/notifications#conditional-notifications) to restrict the events on which notifications are sent:

```yaml
notify:
  - slack: "#general"
    if: build.state == "passed"
```
{: codeblock-file="pipeline.yml"}

See [Build States](#build-states) for possible values for the build state.

Slack notifications happen at the following [event](/docs/apis/webhooks#events):

* `build finished`

## GitHub check

Buildkite can add details of the checks it runs to your pull request.

<%= image "github-buildkite-checks.jpg", alt: "Screenshot of a GitHub pull request, showing the Buildkite checks run." %>
<!-- vale off -->
Normally, Buildkites adds this automatically, but if you disable _Update commit statuses_ in your pipeline settings, you need to manually add the check notification. Refer to [GitHub - Manually add check details using `github_check`](/docs/integrations/github#manually-add-check-details-using-github_check) for detailed guidance.
<!-- vale on -->
## GitHub commit status

The commit status is the label used to identify the Buildkite checks on your commits and pull requests on GitHub. Normally, Buildkite autogenerates these statuses, but you can set custom statuses at both the build and step level. Refer to [GitHub - Customizing commit statuses](/docs/integrations/github#customizing-commit-statuses) for detailed guidance.

## GitHub pull request comment
<!-- vale off -->
You can add review comments to files in a pull request. This is a step level action (you cannot add comments at build level). Refer to [GitHub - Add comments to GitHub pull requests](/docs/integrations/github#add-comments-to-github-pull-requests) for detailed guidance.
<!-- vale on -->
## Webhooks

Send a notification to a webhook URL from your pipeline using the `webhook` attribute of the `notify` yaml block:

```yaml
notify:
  - webhook: "https://webhook.site/32raf257-168b-5aca-9067-3b410g78c23a"
```
{: codeblock-file="pipeline.yml"}

The `webhook` attribute accepts a single webhook URL as a string. To send notifications to more than one endpoint, add each URL as a separate webhook attribute:

```yaml
notify:
  - webhook: "https://webhook.site/82n740x6-168b-5aca-9067-3b410g78c23a"
  - webhook: "https://webhook.site/32raf257-81b6-9067-5aca-78s09m6102b4"
  - webhook: "https://webhook.site/27f518bw-9067-5aca-b681-102c847j917z"
```
{: codeblock-file="pipeline.yml"}

Webhook notifications happen at the following [events](/docs/apis/webhooks#events), unless you restrict them using [conditionals](/docs/pipelines/notifications#conditional-notifications):

* `build created`
* `build started`
* `build blocked`
* `build finished`

## PagerDuty change events

If you've set up a [PagerDuty integration](/docs/integrations/pagerduty) you can send Change Events from your pipeline using the `pagerduty_change_event` attribute of the `notify` yaml block:

```yaml
steps:
  - command: "tests.sh"

notify:
  - pagerduty_change_event: "636d22Yourc0418Key3b49eee3e8"
```
{: codeblock-file="pipeline.yml"}

Email notifications happen at the following [event](/docs/apis/webhooks#events):

* `build finished`

Restrict notifications to passed builds by adding a [conditional](#conditional-notifications):

```yaml
steps:
  - command: "tests.sh"

notify:
  - pagerduty_change_event: "636d22Yourc0418Key3b49eee3e8"
    if: "build.state == 'passed'"
```
{: codeblock-file="pipeline.yml"}

## Build states

<%= render_markdown 'pipelines/build_states' %>

See the full [build states diagram](/docs/pipelines/defining-steps#build-states) for more information on how builds transition between states.

## Job states

<%= render_markdown 'pipelines/job_states' %>

See the full [job states diagram](/docs/pipelines/defining-steps#job-states) for more information on how jobs transition between states.

# Build States and Job States

When you run a pipeline, a build is created. Each of the steps in the pipeline ends up as a job in the build, which then get distributed to available agents. This is an overview of the existing build and job states.

{:toc}

## Build states

The following diagram shows you how builds progress from start to end.

<%= image "build-states.svg", size: "900x615", alt: "Build state diagram" %>

<%= render_markdown partial: 'pipelines/build_states' %>

## Job states

Job states have a similar flow to [build states](#build-states) but with a few extra states. The following diagram shows you how jobs progress from start to end.

<%= image "job-states.svg", size: "1482x690", alt: "Job state diagram" %>

As well as the states shown in the diagram, the following progressions can occur:

can progress to `skipped`  | can progress to `canceling` or `canceled`
-------------------------- | -----------------------------------------
`pending`                  | `accepted`
`waiting`                  | `pending`
`blocked`                  | `limiting`
`limiting`                 | `limited`
`limited`                  | `blocked`
`accepted`                 | `unblocked`
`broken`                   |
{: class="two-column"}

Differentiating between `broken`, `skipped` and `canceled` states:

* Jobs become `broken` when their configuration prevents them from running. This might be because their branch configuration doesn't match the build's branch, or because a conditional returned false.
* This is distinct from `skipped` jobs, which might happen if a newer build is started and [build skipping](/docs/apis/rest-api/pipelines#create-a-yaml-pipeline) is enabled. Broadly, jobs break because of something inside the build, and are skipped by something outside the build.
* Jobs can be `canceled` intentionally, either using the Buildkite UI or one of the APIs.

<section class="Docs__note">
  <p>The <a href="/docs/apis/rest-api/builds">REST API</a> does not return <code>finished</code>, but returns <code>passed</code> or <code>failed</code> according to the exit status of the job. It also lists <code>limiting</code> and <code>limited</code> as <code>scheduled</code> for legacy compatibility.</p>
</section>

<%= render_markdown partial: 'pipelines/job_states' %>

Each job in a build also has a footer that displays exit status information. It may include exit signal reason, which indicates which indicates whether the Buildkite agent stopped or the job was cancelled.

<section class="Docs__troubleshooting-note">
  <p>Exit status information available in the <a href="/docs/apis/graphql-api">GraphQL API</a> but not the <a href="/docs/apis/rest-api">REST API</a>.</p>
</section>

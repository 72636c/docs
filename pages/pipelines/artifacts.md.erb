# Using Build Artifacts

In this guide we’ll walk through using the Buildkite Agent’s [artifact support](/docs/agent/v3/cli-artifact) to store and retrieve files between different steps in a build pipeline.

{:toc}

## Uploading Artifacts in Build Steps

Upload artifacts in your build steps by defining file path patterns, either in  `artifact_paths` attribute of your command step or in the “Automatic Artifact Uploading” field of the Buildkite UI.

The following example shows the Buildkite UI configured to upload any artifacts in the `logs` or `coverage` directories, as well as any of their subdirectories. Files will be uploaded automatically to `logs/` or `coverage/` respectively.

<%= image "artifact_pattern.png", width: 959/2, height: 238/2, alt: "Artifact pattern configuration" %>

And the same configuration in YAML:

```yaml
steps:
  - label: ":hammer: Tests"
    command:
      - "npm install"
      - "tests.sh"
    artifact_paths:
      - "logs/**/*"
      - "coverage/**/*"
```
{: codeblock-file="pipeline.yml"}

## Uploading Artifacts from Scripts

Upload artifacts from your build scripts with the `buildkite-agent artifact` command.
The following example uploads `build.tar.gz` from the `pkg` directory to `pgk/build.tar.gz`:

```bash
buildkite-agent artifact upload pkg/build.tar.gz
```

For full documentation of the `buildkite-agent artifact upload` command see

* [buildkite-agent artifact upload documentation](/docs/agent/v3/cli-artifact#uploading-artifacts)
* [Artifact upload examples](/docs/agent/v3/cli-artifact#uploading-artifacts-artifact-upload-examples)
* [Artifact upload glob syntax](/docs/agent/v3/cli-artifact#uploading-artifacts-artifact-upload-glob-syntax)


## Downloading Artifacts

You can download artifacts created by a build job, from inside a running build, using the `buildkite-agent artifact download` command. For example, to download all artifacts in the `logs`  directory (including subdirectories, which will be recreated) to `local-logs/logs/`:

```bash
buildkite-agent artifact download logs/* local-logs/
```

The `buildkite-agent artifact` command will find the most recent file uploaded with a matching filename, no matter which build step uploaded it. If you want to target an artifact from a particular build step use the `--step` argument.

For example, to download a `build.zip` artifact you uploaded in the "build" pipeline step:

```bash
buildkite-agent artifact download build.zip tmp/ --step build
```

For full documentation of the `buildkite-agent artifact download` command see

* [buildkite-agent artifact download documentation](/docs/agent/v3/cli-artifact#downloading-artifacts)
* [Artifact download examples](/docs/agent/v3/cli-artifact#downloading-artifacts-artifact-download-examples)
* [Artifact download pattern syntax](/docs/agent/v3/cli-artifact#downloading-artifacts-artifact-download-pattern-syntax)

## Downloading Artifacts Outside a Running Build

The `buildkite-agent artifact download` command only works within the context of a running build.

If you want to download an artifact from outside a build use our [Artifact Download API](/docs/api/artifacts#download-an-artifact).

## Further documentation

See the [Buildkite Agent artifact documentation](/docs/agent/v3/cli-artifact) for a full list of options and details of Buildkite’s artifact support.

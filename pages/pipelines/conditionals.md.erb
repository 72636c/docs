# Conditionals

- the `if` parameter provides the ability to conditionally run steps
- using c-like expressions, boolean conditions are defined to restrict the running of steps to specific circumstances
- can be used in all YAML-based pipelines

<%= toc %>

## `if` Syntax

- use the `if` param to conditionally run a step
- the below example will only run the `tests` step if the build message doesn't contain the string "skip me"

```
steps:
	- command: ./scripts/tests.sh
	  label: tests
	  - if:
	  	build.message != "skip me"
```

- use it in any step type
- any of the supported expressions and parameters
- cannot be used at the same time as the `branch` parameter

## Supported Expressions

 - Comparators: == != =~ !~
 - Logical operators: || &&
 - Integers 12345
 - Strings 'foobar' or "foobar"
 - Booleans true false
 - Parenthesis to control order of evaluation ( )
 - Regular expressions /^v1\.0/
 - Function calls foo("bar")
 - Prefixes: !

 - note: arrays are not supported

## Supported Variables

<table>
<tbody>
	<tr>
		<td>build.id</td>
		<td></td>
	</tr>
	<tr>
		<td>build.state</td>
		<td></td>
	</tr>
	<tr>
		<td>build.branch</td>
		<td></td>
	</tr>
	<tr>
		<td>build.tag</td>
		<td></td>
	</tr>
	<tr>
		<td>build.message</td>
		<td></td>
	</tr>
	<tr>
		<td>build.commit</td>
		<td></td>
	</tr>
	<tr>
		<td>build.number</td>
		<td></td>
	</tr>
	<tr>
		<td>pipeline.id</td>
		<td></td>
	</tr>
	<tr>
		<td>pipeline.slug</td>
		<td></td>
	</tr>
	<tr>
		<td>pipeline.default_branch</td>
		<td></td>
	</tr>
	<tr>
		<td>pipeline.repository</td>
		<td></td>
	</tr>
	<tr>
		<td>organization.id</td>
		<td></td>
	</tr>
	<tr>
		<td>organization.slug</td>
		<td></td>
	</tr>
</tbody>
</table>

## Examples

```
// comments look like this!

// individual terms
true
false

// compare values
"not-master" == "master"
"toast" != "v1.0.0"
"blah" == 'blah'

// regular expression matches
env("BUILDKITE_MESSAGE") =~ /please/i

// complex expressions
(env("BUILDKITE_TAG") =~ ^v) ||
  (env("BUILDKITE_BRANCH") == "bar")
```
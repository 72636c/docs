# Using Build Artifacts

In this guide we’ll walk through using the Buildkite Agent’s [artifact support](/docs/agent/build-artifacts) to store and retrieve files between different steps in a build pipeline.

<%= toc %>

## Uploading Artifacts

By default the agent will upload any artifacts you’ve specified in your build
step’s “Artifact Uploading” pattern:

<%= image 'artifact_pattern.png', size: '390x125', alt: 'Artifact pattern configuration' %>

You can also upload your own artifacts from your build scripts using
the `buildkite-agent artifact` command.

```bash
buildkite-agent artifact upload pkg/build.tar.gz
```

You can then download the artifact in subsequent build steps (even if the build step is running on a different build server).

## Downloading Artifacts

You can download the artifacts in a build step using `buildkite-agent artifact download`. For example:

```bash
buildkite-agent artifact download pkg/build.tar.gz pkg/
```

This will download the `pkg/build.tar.gz` file that has been uploaded from a previous step into `pkg` folder.

The `buildkite-agent artifact` command will find the last file uploaded with the matching filename, no matter which build step uploaded it. If you want to target an artifact from a particular build step use the `--job` argument. For example:

```bash
buildkite-agent artifact download build.zip tmp/ --job build
```

This will download the `build.zip` file from the "build" pipeline step.

You can also use wildcard arguments to download multiple assets at once (just make sure to surround the pattern in quotes):

```bash
buildkite-agent artifact download "*.tar.gz" pkg/
```

## Further documentation

See the [Buildkite Agent artifact documentation](/docs/agent/build-artifacts) for a full list of options and details of Buildkite’s artifact support.
# Securing Plugins

Plugins introduce a third-party dependency to your pipeline. Any plugins not written by you should be assessed for risks prior to use in your pipeline; they provide a way to introduce executable code into your pipeline, beyond scripts in your repository.

See the [Securing your Buildkite Agent guide](/docs/agent/v3/securing) for related security recommendations.

<%= toc %>

## Pinning plugin versions

To avoid a plugin’s git tag contents being changed, you can use the commit SHA of the tag, for example using `docker-compose#287293c4` in the following example:

```yml
steps:
  - command: echo 'Hello World'
    plugins:
      - docker-compose#287293c4:
          run: app
```

## Disabling plugins

To selectively allow and disallow plugins you can use the agent’s [environment hook](/docs/agent/v3/hooks) and the `BUILDKITE_PLUGINS` [environment variable](/docs/pipelines/environment-variables). See the [github.com/buildkite/buildkite-allowed-plugins-hook-example](https://github.com/buildkite/buildkite-allowed-plugins-hook-example) repository for an example implementation.

To disable plugins entirely, set the `no-plugins` [agent configuration](/docs/agent/v3/configuration) option:

```
no-plugins: true
```

## Recommendations for plugin authors

Use [ Bash Strict Mode](http://redsymbol.net/articles/unofficial-bash-strict-mode/) when writing scripts and check them with [shellcheck](https://github.com/koalaman/shellcheck).

Take special care to avoid executing arbitrary code passed in to plugins through config. Agent config options store their values in environment variables. Anything that can set environment variables can affect plugin configuration. 

# Integrate your test framework

<div class="Docs__wip-note">
  <p class="Docs__wip-heading">Test Analytics is an invite-only beta feature. Join the <a href="https://buildkite.com/test-analytics">waitlist</a>.</p>
</div>

{:toc}

Test Analytics integrates directly with your test runner to provide in-depth information about your tests (including spans) in real time. The beta release ships with [RSpec](#integrating-with-rspec), and you can also upload test results by importing [JSON](#importing-json) or [JUnit XML](#importing-junit-xml).

## Integrating with RSpec

[RSpec](https://rspec.info/) is a behaviour driven development library for Ruby.
If you're aleady using RSpec for your tests, add the `rspec-buildkite-analytics` gem to your code to integrate your test results into your Test Analytics dashboard.

1. Create a new branch:

    ```
    git checkout -b install-buildkite-test-analytics
    ```

2. Add `rspec-buildkite-analytics` to your `Gemfile` in the `:test` group:

    ```rb
    group :test do
      gem "rspec-buildkite-analytics"
    end
    ```

3. Run `bundle` to install the gem and update your `Gemfile.lock`:

    ```sh
    $ bundle
    ```

3. Add the Test Analytics code to your application in `spec/spec_helper.rb`, and set the envionment variable [securely](/docs/pipelines/secrets) on your agent or agents.

    ```rb
    require "rspec/buildkite/analytics"

    RSpec::Buildkite::Analytics.configure(ENV["TEST_ANALYTICS_TOKEN"])
    ```

4. Commit and push your changes:

    ```sh
    $ git add .
    $ git commit -m "Install and set up Buildkite Test Analytics"
    $ git push
    ```

5. Make sure that the Test Analytics [environment variables](#integrating-with-rspec-environment-variables) are set so that the RSpec integration can use them in your Test Analytics dashboard.

Once youâ€™re done, in your Test Analytics dashboard, you'll see analytics of test executions on all branches that include this code.

### Environment variables

Test Analytics uses the following environment variables to populate test information. If you're using Buildkite to run your builds these variables are populated automatically.

The only required environment variable is `BUILDKITE_ANALYTICS_KEY`, but some features of Test Analytics aren't available if not all of the other environment variables are set:

* `BUILDKITE_ANALYTICS_KEY` - a unique key for the build that initiated the Test Analytics run
* `BUILDKITE_ANALYTICS_URL` - a URL that links to the build
* `BUILDKITE_ANALYTICS_BRANCH` - the branch or ref that this run is for
* `BUILDKITE_ANALYTICS_SHA` - the commit sha for the head of the branch
* `BUILDKITE_ANALYTICS_NUMBER` - the build number of the build
* `BUILDKITE_ANALYTICS_JOB_ID` - the id of a job within the build
* `BUILDKITE_ANALYTICS_MESSAGE` - the commit message for the head of the branch

### Supported continuous integration platforms

The Test Analytics RSpec integration works with

* Buildkite
* GitHub Actions
* CircleCI

<!-- Related PR: https://github.com/buildkite/rspec-buildkite-analytics/pull/80 -->

Test Analytics provides quick links from Test Analytics to your builds, regardless of your CI platform.

## Importing JUnit XML

<div class="Docs__troubleshooting-note">
  While most test frameworks have a built-in JUnit XML export feature, these JUnit reports do not provide detailed span information. Therefore, features in Test Analytics that depend on span information aren't available when using JUnit as a data source. If you need span information, consider using the <a href="#importing-json">JSON import</a> API instead.
</div>

To import JUnit XML, make a POST request to `https://analytics-api.buildkite.com/v1/uploads`, with metadata and JUnit XML test results encoded as JSON in the request body:

* if you're making the request in a Buildkite pipeline, you can use the Buildkite [environment variables](/docs/pipelines/environment-variables#bk-env-vars) to set the metadata
* if you're making it elsewhere, you'll need to set them yourself.

Test Analytics uses the following variables in the `run_env` attribute to populate test information. The only *required* variable is `key`, but other Test Analytics features such as linking back to the originating build, do require the other variables to work:

* `CI`
* `key` (**required**)
* `number`
* `job_id`
* `branch`
* `commit_sha`
* `message`
* `url`

Remember to replace the API token with your own, and make sure to JSON-encode your JUnit xml as in the next two code blocks.

```sh
export TEST_ANALYTICS_TOKEN=hRRfSY3iRKwerfertg8796fgjurjw65tMTs1h1 curl --request POST \
  --url https://analytics-api.buildkite.com/v1/uploads \
  --header 'Authorization: Token token="'$TEST_ANALYTICS_TOKEN'";' \
  --header 'Content-Type: application/json' \
  --data @- << EOF
    {
      "format": "junit",
      "run_env": {
        "CI": "buildkite",
        "key": "$BUILDKITE_BUILD_ID",
        "number": "$BUILDKITE_BUILD_NUMBER",
        "job_id": "$BUILDKITE_JOB_ID",
        "branch": "$BUILDKITE_BRANCH",
        "commit_sha": "$BUILDKITE_COMMIT",
        "message": "$BUILDKITE_MESSAGE",
        "url": "$BUILDKITE_BUILD_URL"
      },
      "data": "JSON-encoded JUnit XML goes here"
    }
EOF
```

Example JSON-encoded JUnit XML:

```json
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<testsuites disabled=\"\" errors=\"\" failures=\"\" name=\"\" tests=\"\" time=\"\">\r\n    <testsuite disabled=\"\" errors=\"\" failures=\"\" hostname=\"\" id=\"\"\r\n               name=\"\" package=\"\" skipped=\"\" tests=\"\" time=\"\" timestamp=\"2021-11-23 10:47\">\r\n        <properties>\r\n            <property name=\"\" value=\"\"/>\r\n        </properties>\r\n        <testcase assertions=\"\" classname=\"Banana\" name=\"lol\" status=\"\" file=\"banana.rb\" time=\"1000\">\r\n            <system-out/>\r\n            <system-err/>\r\n        </testcase>\r\n        <testcase assertions=\"\" classname=\"Banana\" name=\"rofl\" status=\"\" file=\"banana.rb\" time=\"1000\">\r\n            <skipped/>\r\n            <system-out/>\r\n            <system-err/>\r\n        </testcase>\r\n        <testcase assertions=\"\" classname=\"Banana\" name=\"hue\" status=\"\" file=\"banana.rb\" time=\"1000\">\r\n            <error message=\"\" type=\"\"/>\r\n            <failure message=\"\" type=\"\"/>\r\n            <system-out/>\r\n            <system-err/>\r\n        </testcase>\r\n        <system-out/>\r\n        <system-err/>\r\n    </testsuite>\r\n</testsuites>"
```

Test Analytics parses the XML and imports all valid test cases for ingestion and evaluation. The response to a successful request is `202 Accepted` with the newly created `id` (Run ID), and totals for the number of `queued` and `skipped` test cases contained in the uploaded data.

```json
{
  "id": "eac9b176-7869-464d-952e-7f87e2579128",
  "queued": 3,
  "skipped": 0
}
```

## Importing JSON

The Test Analytics JSON API accepts all of the same information that test framework integrations do, allowing you to display, analyze, and explore more detailed information than the generic JUnit XML reports.

To import JSON formatted test result data, make a POST request to `https://analytics-api.buildkite.com/v1/uploads`, with metadata and JSON in the request body:

* if you're making the request in a Buildkite pipeline, you can use the Buildkite [environment variables](/docs/pipelines/environment-variables#bk-env-vars) to set the metadata
* if you're making it elsewhere, you'll need to set them yourself.

Test Analytics uses the following variables in the `run_env` attribute to populate test information. The only *required* variable is `key`, but other Test Analytics features such as linking back to the originating build, do require the other variables to work:

* `CI`
* `key` (**required**)
* `number`
* `job_id`
* `branch`
* `commit_sha`
* `message`
* `url`

Remember to replace the API token with your own:

```sh
export TEST_ANALYTICS_TOKEN=hRRfSY3iRKwerfertg8796fgjurjw65tMTs1h1 curl --request POST \
  --url https://analytics-api.buildkite.com/v1/uploads \
  --header 'Authorization: Token token="'$TEST_ANALYTICS_TOKEN'";' \
  --header 'Content-Type: application/json' \
  --data @- << EOF
    {
    "format": "json",
    "run_env": {
      "CI": "buildkite",
      "key": "$BUILDKITE_BUILD_ID",
      "number": "$BUILDKITE_BUILD_NUMBER",
      "job_id": "$BUILDKITE_JOB_ID",
      "branch": "$BUILDKITE_BRANCH",
      "commit_sha": "$BUILDKITE_COMMIT",
      "message": "$BUILDKITE_MESSAGE",
      "url": "$BUILDKITE_BUILD_URL"
    },
    "data": [
              <put JSON format results here>
          ]
    }
```

<!-- From https://github.com/buildkite/buildkite/blob/main/spec/fixtures/analytics/upload.jsons -->

The JSON format is not yet documented, but the following example is what is produced by the [RSpec integration](#integrating-with-rspec):

```json
[
  {
    "id": "95f7e024-9e0a-450f-bc64-9edb62d43fa9",
    "scope": "Analytics::Upload associations",
    "name": "fails",
    "identifier": "./spec/models/analytics/upload_spec.rb[1:1:3]",
    "location": "./spec/models/analytics/upload_spec.rb:24",
    "file_name": "./spec/models/analytics/upload_spec.rb",
    "result": "failed",
    "failure_reason": "Failure/Error: expect(true).to eq false",
    "failure_expanded": [
      {
        "expanded": [
          "  expected: false",
          "       got: true",
          "",
          "  (compared using ==)",
          "",
          "  Diff:",
          "  @@ -1 +1 @@",
          "  -false","  +true"
        ],
        "backtrace": [
          "./spec/models/analytics/upload_spec.rb:25:in `block (3 levels) in \u003ctop (required)\u003e'","./spec/support/log.rb:17:in `run'",
          "./spec/support/log.rb:66:in `block (2 levels) in \u003ctop (required)\u003e'",
          "./spec/support/database.rb:19:in `block (2 levels) in \u003ctop (required)\u003e'",
          "/Users/roselu/Documents/rspec-buildkite-analytics/lib/rspec/buildkite/analytics/uploader.rb:153:in `block (2 levels) in configure'",
          "-e:1:in `\u003cmain\u003e'"
        ]
      }
    ],
    "history": {
      "section": "top",
      "start_at": 347611.724809,
      "end_at": 347612.451041,
      "duration": 0.726232000044547,
      "detail": {},
      "children": [
        {
          "section": "sql",
          "start_at": 347611.734956,
          "end_at": 347611.735647,
          "duration": 0.0006910000229254365,
          "detail": {
            "query": "SET client_min_messages TO 'warning' /*line:/Users/roselu/Documents/rspec-buildkite-analytics/lib/rspec/buildkite/analytics/uploader.rb:153:in `block (2 levels) in configure'*/"
          },
          "children": []
        }
      ]
    }
  },
  {
    "id": "3ec5600e-fe8e-46b6-91b2-0eb3a2652e30",
    "scope": "Analytics::Upload associations",
    "name": "also fails",
    "identifier": "./spec/models/analytics/upload_spec.rb[1:1:4]",
    "location": "./spec/models/analytics/upload_spec.rb:27",
    "file_name": "./spec/models/analytics/upload_spec.rb",
    "result": "failed",
    "failure_reason": "Failure/Error: raise StandardError",
    "failure_expanded": [
      {
        "expanded": [
          "StandardError:",
          "  StandardError"
        ],
        "backtrace": [
          "./spec/models/analytics/upload_spec.rb:28:in `block (3 levels) in \u003ctop (required)\u003e'","./spec/support/log.rb:17:in `run'","./spec/support/log.rb:66:in `block (2 levels) in \u003ctop (required)\u003e'",
          "./spec/support/database.rb:19:in `block (2 levels) in \u003ctop (required)\u003e'",
          "/Users/roselu/Documents/rspec-buildkite-analytics/lib/rspec/buildkite/analytics/uploader.rb:153:in `block (2 levels) in configure'",
          "-e:1:in `\u003cmain\u003e'"
        ]
      }
    ],
    "history": {
      "section": "top",
      "start_at": 347612.50397,
      "end_at": 347612.787357,
      "duration": 0.2833869999740273,
      "detail": {},
      "children": [
        {
          "section": "sql",
          "start_at": 347612.53343899996,
          "end_at": 347612.618446,
          "duration": 0.08500700001604855,
          "detail": {
            "query":  "ALTER TABLE \"agent_connection_counts\" DISABLE TRIGGER ALL;\nDELETE FROM \"agent_connection_counts\";\nALTER TABLE \"agent_connection_counts\" ENABLE TRIGGER ALL;\nALTER TABLE \"agent_registration_tokens\" DISABLE TRIGGER ALL;\nDELETE FROM \"agent_registration_tokens\";\nALTER TABLE \"agent_registration_tokens\" ENABLE TRIGGER ALL;\nALTER TABLE \"agents\" DISABLE TRIGGER ALL;\nDELETE FROM \"agents\";\nALTER TABLE \"agents\" ENABLE TRIGGER ALL;\nALTER TABLE \"agents_projects\" DISABLE TRIGGER ALL;\nDELETE FROM \"agents_projects\";"
          },
          "children": []
        }
      ]
    }
  },
  {
    "id": "aac73c9d-f899-4e4e-a841-f33896a193e7",
    "scope": "Analytics::Upload associations",
    "name": "upload.executions",
    "identifier": "./spec/models/analytics/upload_spec.rb[1:1:1]",
    "location": "./spec/models/analytics/upload_spec.rb:12",
    "file_name": "./spec/models/analytics/upload_spec.rb",
    "result": "failed",
    "failure_reason": "Got 2 failures and 1 other error from failure aggregation block",
    "failure_expanded": [
      {
        "expanded": [
          "Failure/Error: expect(true).to eq false","","  expected: false",
          "       got: true",
          "",
          "  (compared using ==)",
          "",
          "  Diff:",
          "  @@ -1 +1 @@",
          "  -false",
          "  +true"
        ],
        "backtrace": [
          "./spec/models/analytics/upload_spec.rb:14:in `block (4 levels) in \u003ctop (required)\u003e'",
          "./spec/models/analytics/upload_spec.rb:13:in `block (3 levels) in \u003ctop (required)\u003e'",
          "./spec/support/log.rb:17:in `run'",
          "./spec/support/log.rb:66:in `block (2 levels) in \u003ctop (required)\u003e'",
          "./spec/support/database.rb:19:in `block (2 levels) in \u003ctop (required)\u003e'",
          "/Users/roselu/Documents/rspec-buildkite-analytics/lib/rspec/buildkite/analytics/uploader.rb:153:in `block (2 levels) in configure'",
          "-e:1:in `\u003cmain\u003e'"
        ]
      },
      {
        "expanded": [
          "Failure/Error: expect(upload.executions.count).to eq 1",
          "",
          "  expected: 1",
          "       got: 2",
          "",
          "  (compared using ==)"
        ],
        "backtrace": [
          "./spec/models/analytics/upload_spec.rb:15:in `block (4 levels) in \u003ctop (required)\u003e'",
          "./spec/models/analytics/upload_spec.rb:13:in `block (3 levels) in \u003ctop (required)\u003e'",
          "./spec/support/log.rb:17:in `run'",
          "./spec/support/log.rb:66:in `block (2 levels) in \u003ctop (required)\u003e'",
          "./spec/support/database.rb:19:in `block (2 levels) in \u003ctop (required)\u003e'",
          "/Users/roselu/Documents/rspec-buildkite-analytics/lib/rspec/buildkite/analytics/uploader.rb:153:in `block (2 levels) in configure'",
          "-e:1:in `\u003cmain\u003e'"]
      },
      {
        "expanded": [
          "Failure/Error: raise StandardError",
          "",
          "StandardError:",
          "  StandardError"
        ],
        "backtrace": [
          "./spec/models/analytics/upload_spec.rb:16:in `block (4 levels) in \u003ctop (required)\u003e'",
          "./spec/models/analytics/upload_spec.rb:13:in `block (3 levels) in \u003ctop (required)\u003e'",
          "./spec/support/log.rb:17:in `run'",
          "./spec/support/log.rb:66:in `block (2 levels) in \u003ctop (required)\u003e'",
          "./spec/support/database.rb:19:in `block (2 levels) in \u003ctop (required)\u003e'",
          "/Users/roselu/Documents/rspec-buildkite-analytics/lib/rspec/buildkite/analytics/uploader.rb:153:in `block (2 levels) in configure'",
          "-e:1:in `\u003cmain\u003e'"
        ]
      }
    ],
    "history": {
      "section": "top",
      "start_at": 347612.791024,
      "end_at": 347613.109785,
      "duration": 0.3187610000022687,
      "detail": {},
      "children": [
        {
          "section": "sql",
          "start_at": 347612.819713,
          "end_at": 347612.898322,
          "duration": 0.07860900001833215,
          "detail": {
            "query": "ALTER TABLE \"agent_connection_counts\" DISABLE TRIGGER ALL;\nDELETE FROM \"agent_connection_counts\";\nALTER TABLE \"agent_connection_counts\" ENABLE TRIGGER ALL;\nALTER TABLE \"agent_registration_tokens\" DISABLE TRIGGER ALL;\nDELETE FROM \"agent_registration_tokens\";"
          },
          "children": []
        }
      ]
    }
  }
]
```

## Build your own analytics collector

If you're interested in building a fully integrated collector for specific test runners, have a look at our [example collector](https://github.com/buildkite/rspec-buildkite-analytics) on GitHub.
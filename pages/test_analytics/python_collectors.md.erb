# Configuring Python with Test Analytics

To use Test Analytics with your Python projects, generate JUnit XML files with [pytest](https://docs.pytest.org), and then [upload the JUnit XML files](/docs/test-analytics/importing-junit-xml) to Test Analytics.

{:notoc}

1. Install [pytest](https://docs.pytest.org/en/6.2.x/getting-started.html):

    ```sh
    pip install -U pytest
    ```

1. Use pytest to run your tests and output JUnit XML, for example:

    ```sh
    pytest testing/ --junitxml="result.xml"
    ```

1. Upload the JUnit.xml to Buildkite:

    ```sh
    curl \
      -X POST \
      --fail-with-body \
      -H "Authorization: Token token=\"$BUILDKITE_ANALYTICS_TOKEN\"" \
      -F "data=@junit.xml" \
      -F "format=junit" \
      -F "run_env[CI]=buildkite" \
      -F "run_env[key]=$BUILDKITE_BUILD_ID" \
      -F "run_env[number]=$BUILDKITE_BUILD_NUMBER" \
      -F "run_env[job_id]=$BUILDKITE_JOB_ID" \
      -F "run_env[branch]=$BUILDKITE_BRANCH" \
      -F "run_env[commit_sha]=$BUILDKITE_COMMIT" \
      -F "run_env[message]=$BUILDKITE_MESSAGE" \
      -F "run_env[url]=$BUILDKITE_BUILD_URL" \
      https://analytics-api.buildkite.com/v1/uploads
    ```

See [pytest](https://docs.pytest.org) for full documentation of its features and command-line flags.

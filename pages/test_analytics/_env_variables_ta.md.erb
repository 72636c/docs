## Environment variables

Test Analytics uses environment variables to populate test information. Regardless of the CI provider you use to run your builds, you need to make sure that environment variables are available to the RSpec integration or import API. You also need to make sure that the environment variables are passed through to a container if your builds are running in containers.

Not all of these variables are set or available for each CI provider, for more details on specific integrations and providers see:

* [RSpec on Buildkite](#environment-variables-rspec-on-buildkite)
* [RSpec on CircleCI](#environment-variables-rspec-on-circleci)
* [RSpec on GitHub Actions](#environment-variables-rspec-on-github-actions)
* [RSpec on other CI providers](#environment-variables-other-ci-providers-and-integrations)
* [Other CI providers and integrations](#environment-variables-other-ci-providers-and-integrations)

The only required environment variable is the unique key for the build that initiated the Test Analytics run (`BUILDKITE_ANALYTICS_KEY`).

If you're not using CI, you can still use Test Analytics by running the [RSpec integration](#integrating-with-rspec), [JUnit import](#importing-junit-xml), or [JSON import](#importing-json), yourself to upload data to Test Analytics.

### RSpec on Buildkite

The following variables are set automatically when the RSpec integration is running on Buildkite:

| Variable                       | Description and source                                                   |
|--------------------------------|--------------------------------------------------------------------------|
| `key`        | a unique key for the build that initiated the Test Analytics run<br />`BUILDKITE_BUILD_ID` |
| `url`        | URL that links to the build <br /> `BUILDKITE_BUILD_URL`                                   |
| `branch`     | the branch or reference that this run is for<br />`BUILDKITE_BRANCH`                       |
| `commit_sha  | the commit sha for the head of the branch<br />`BUILDKITE_COMMIT`                          |
| `number`     | the build number of the build<br />`BUILDKITE_BUILD_NUMBER`                                |
| `job_id`     | the id of a job within the build<br />`BUILDKITE_JOB_ID`                                   |
| `message`    | the commit message for the head of the branch<br />`BUILDKITE_JOB_ID`                      |


### RSpec on CircleCI

The following variables are set automatically when the RSpec integration is running on CircleCI:

| Variable     | Description and source                                                                                          |
|--------------|-----------------------------------------------------------------------------------------------------------------|
| `key`        | a unique key for the build that initiated the Test Analytics run<br />`CIRCLE_WORKFLOW_ID` and `CIRCLE_BUILD_NUM` |
| `url`        | a URL that links to the build <br /> `CIRCLE_BUILD_URL`                                                         |
| `branch`     | the branch or reference that this run is for<br />`CIRCLE_BRANCH`                                                     |
| `commit_sha` | the commit SHA for the head of the branch<br />`CIRCLE_SHA1`                                                    |
| `number`     | the build number of the build<br />    `CIRCLE_BUILD_NUM`                                                       |

To pass a human-readable commit message through to Test Analytics, set the `BUILDKITE_ANALYTICS_MESSAGE` variable.

### RSpec on GitHub Actions

The following variables are set automatically when the RSpec integration is running on GitHub Actions:

| Variable     | Description and source                                                                                                               |
|--------------|--------------------------------------------------------------------------------------------------------------------------------------|
| `key`        | a unique key for the build that initiated the Test Analytics run<br />`GITHUB_ACTION` and `GITHUB_RUN_NUMBER` and `GITHUB_RUN_ATTEMPT` |
| `url`        | a URL that links to the build <br /> `GITHUB_REPOSITORY` and `GITHUB_RUN_ID`                                                         |
| `branch`     | the branch or reference that this run is for<br />`GITHUB_REF`                                                                             |
| `commit_sha` | the commit SHA for the head of the branch<br />`GITHUB_REF`                                                                          |
| `number`     | the build number of the build<br />    `GITHUB_RUN_NUMBER`                                                                           |

To pass a human-readable commit message through to Test Analytics, set the `BUILDKITE_ANALYTICS_MESSAGE` variable.

### RSpec on other CI providers

If you're using other CI providers, you need to configure these environment variables yourself. The only required environment variable is the unique key for the build that initiated the Test Analytics run (`BUILDKITE_ANALYTICS_KEY`), but some features of Test Analytics aren't available if the other environment variables are not set:

| Variable                       | Description and source                                         |
|--------------------------------|----------------------------------------------------------------|
| `BUILDKITE_ANALYTICS_KEY`      | a unique key for the build that initiated the Test Analytics run |
| `BUILDKITE_ANALYTICS_URL`      | URL that links to the build                                    |
| `BUILDKITE_ANALYTICS_BRANCH`   | the branch or reference that this run is for                         |
| `BUILDKITE_ANALYTICS_SHA`      | the commit SHA for the head of the branch                      |
| `BUILDKITE_ANALYTICS_NUMBER`   | the build number of the build                                  |
| `BUILDKITE_ANALYTICS_JOB_ID`   | the id of a job within the build                               |
| `BUILDKITE_ANANLYTICS_MESSAGE` | the commit message for the head of the branch                  |

### Other CI providers and integrations

If you're using other tools, such as the [JUnit](#importing-junit-xml) or [JSON](#importing-json) importers, you need to configure the variables in `run_env` yourself.

The only required variable is `key`, but some features of Test Analytics aren't available if the other variables are not set:

| Variable     | Description                                                    |
|--------------|----------------------------------------------------------------|
| `key`        | a unique key for the build that initiated the Test Analytics run |
| `url`        | URL that links to the build                                    |
| `branch`     | the branch or reference that this run is for                         |
| `commit_sha` | the commit SHA for the head of the branch                      |
| `number`     | the build number of the build                                  |
| `job_id`     | the id of a job within the build                               |
| `message`    | the commit message for the head of the branch                  |


## Build your own analytics collector

If you're interested in building a fully integrated collector for specific test runners, have a look at our [example collector](https://github.com/buildkite/rspec-buildkite-analytics) on GitHub.

# Environment Variables

When the agent invokes your build scripts it passes in a set of standard Buildkite environment variables, along with any that you've defined in your build configuration. You can use these environment variables in your [build steps](/docs/pipelines/defining-steps) and [agent hooks](/docs/agent/hooks).

<%= toc %>

## Standard Buildkite environment variables

The following environment variables are automatically provided to every job, and are read only. They can’t be overriden by your pipeline configuration or environment hooks.

<table>
<tbody>
  <tr>
    <th><code>BUILDKITE</code></th>
    <td>Always <code>"true"</code>.</td>
  </tr>
  <tr>
    <th><code>BUILDKITE_AGENT_NAME</code></th>
    <td>Name of the agent running the job. <p class="Docs__api-param-eg"><em>Example:</em> <code>"my-agent-1"</code></p></td>
  </tr>
  <tr>
    <th><code>BUILDKITE_ARTIFACT_PATHS</code></th>
    <td>The <a href="/docs/builds/artifacts">artifact paths</a> to upload after the job, if any have been specified. <p class="Docs__api-param-eg"><em>Example:</em> <code>"tmp/capybara/**/*;coverage/**/*"</code></p></td>
  </tr>
  <tr>
    <th><code>BUILDKITE_BRANCH</code></th>
    <td>The branch being built. <p class="Docs__api-param-eg"><em>Example:</em> <code>"master"</code></p></td>
  </tr>
  <tr>
    <th><code>BUILDKITE_BUILD_CHECKOUT_PATH</code></th>
    <td>The path where the agent has checked out your code for this build. <p class="Docs__api-param-eg"><em>Example:</em> <code>"/var/lib/buildkite-agent/builds/agent-1/pipeline-2"</code></p></td>
  </tr>
  <tr>
    <th><code>BUILDKITE_BUILD_CREATOR</code></th>
    <td>The name of the user who created the build. <p class="Docs__api-param-eg"><em>Example:</em> <code>"Tracy Tester"</code></p></td>
  </tr>
  <tr>
    <th><code>BUILDKITE_BUILD_CREATOR_EMAIL</code></th>
    <td>The notification email of the user who created the build. <p class="Docs__api-param-eg"><em>Example:</em> <code>"tracy@acme-inc.com"</code></p></td>
  </tr>
  <tr>
    <th><code>BUILDKITE_BUILD_CREATOR_TEAMS</code></th>
    <td>A colon separated list of team names that the build creator belongs to. <p class="Docs__api-param-eg"><em>Example:</em> <code>"everyone:platform"</code></p></td>
  </tr>
  <tr>
    <th><code>BUILDKITE_BUILD_ID</code></th>
    <td>The UUID of the original build this was rebuilt from. <p class="Docs__api-param-eg"><em>Example:</em> <code>"4735ba57-80d0-46e2-8fa0-b28223a86586"</code>, or <code>""</code> if not a rebuild.</p></td>
  </tr>
  <tr>
    <th><code>BUILDKITE_BUILD_NUMBER</code></th>
    <td>The build number. <p class="Docs__api-param-eg"><em>Example:</em> <code>"1514"</code></p></td>
  </tr>
  <tr>
    <th><code>BUILDKITE_BUILD_URL</code></th>
    <td>The url for this build on Buildkite. <p class="Docs__api-param-eg"><em>Example:</em> <code>"https://buildkite.com/acme-inc/my-project/builds/1514"</code></p></td>
  </tr>
  <tr>
    <th><code>BUILDKITE_CLEAN_CHECKOUT</code></th>
    <td>Whether the build should perform a clean checkout. <p class="Docs__api-param-eg"><em>Example:</em> <code>"true"</code> or <code>"false"</code></p></td>
  </tr>
  <tr>
    <th><code>BUILDKITE_COMMAND</code></th>
    <td>The command that will be run for the job. <p class="Docs__api-param-eg"><em>Example:</em> <code>"script/buildkite/specs"</code></p></td>
  </tr>
  <tr>
    <th><code>BUILDKITE_COMMIT</code></th>
    <td>The commit of the build. <p class="Docs__api-param-eg"><em>Example:</em> <code>"83a20ec058e2fb00e7fa4558c4c6e81e2dcf253d"</code></p></td>
  </tr>
  <tr>
    <th><code>BUILDKITE_JOB_ID</code></th>
    <td>Internal UUID Buildkite uses for this job. <p class="Docs__api-param-eg"><em>Example:</em> <code>"e44f9784-e20e-4b93-a21d-f41fd5869db9"</code></p></td>
  </tr>
  <tr>
    <th><code>BUILDKITE_LABEL</code></th>
    <td>The label/name of the current job. <p class="Docs__api-param-eg"><em>Example:</em> <code>"\:hammer\: Specs"</code></p></td>
  </tr>
  <tr>
    <th><code>BUILDKITE_MESSAGE</code></th>
    <td>The message associated with the build, usually the commit message. <p class="Docs__api-param-eg"><em>Example:</em> <code>"Added a great new feature"</code></p></td>
  </tr>
  <tr>
    <th><code>BUILDKITE_NO_LOCAL_HOOKS</code></th>
    <td>Whether local hooks in the repository are allowed. <p class="Docs__api-param-eg"><em>Example:</em> <code>"true"</code> or <code>"false"</code></p></td>
  </tr>
  <tr>
    <th><code>BUILDKITE_ORGANIZATION_SLUG</code></th>
    <td>The organization name on Buildkite as used in URLs. <p class="Docs__api-param-eg"><em>Example:</em> <code>"acme-inc"</code></p></td>
  </tr>
  <tr>
    <th><code>BUILDKITE_PIPELINE_DEFAULT_BRANCH</code></th>
    <td>The default branch for this pipeline. <p class="Docs__api-param-eg"><em>Example:</em> <code>"master"</code></p></td>
  </tr>
  <tr>
    <th><code>BUILDKITE_PIPELINE_PROVIDER</code></th>
    <td>The ID of the source code provider for the pipeline’s repository. <p class="Docs__api-param-eg"><em>Example:</em> <code>"github"</code></p></td>
  </tr>
  <tr>
    <th><code>BUILDKITE_PIPELINE_SLUG</code></th>
    <td>The pipeline slug on Buildkite as used in URLs. <p class="Docs__api-param-eg"><em>Example:</em> <code>"my-project"</code></p></td>
  </tr>
  <tr>
    <th><code>BUILDKITE_PULL_REQUEST</code></th>
    <td>The number of the pull request if this branch is a pull request. <p class="Docs__api-param-eg"><em>Example:</em> <code>"123"</code> for pull request #123, or <code>"false"</code> if not a pull request.</p></td>
  </tr>
  <tr>
    <th><code>BUILDKITE_PULL_REQUEST_BASE_BRANCH</code></th>
    <td>The base branch that the pull request is targetting. <p class="Docs__api-param-eg"><em>Example:</em> <code>"master"</code>, or <code>""</code> if not a pull request.</p></td>
  </tr>
  <tr>
    <th><code>BUILDKITE_PULL_REQUEST_REPO</code></th>
    <td>The repository URL of the third-party pull request. <p class="Docs__api-param-eg"><em>Example:</em> <code>"git://github.com/acme-inc/my-project.git"</code>, or <code>""</code> if not a pull request.</p></td>
  </tr>
  <tr>
    <th><code>BUILDKITE_REBUILT_FROM_BUILD_ID</code></th>
    <td>The UUID of the original build this was rebuilt from. <p class="Docs__api-param-eg"><em>Example:</em> <code>"4735ba57-80d0-46e2-8fa0-b28223a86586"</code>, or <code>""</code> if not a rebuild.</p></td>
  </tr>
  <tr>
    <th><code>BUILDKITE_REBUILT_FROM_BUILD_NUMBER</code></th>
    <td>The UUID of the original build this was rebuilt from. <p class="Docs__api-param-eg"><em>Example:</em> <code>"1514"</code>, or <code>""</code> if not a rebuild.</p></td>
  </tr>
  <tr>
    <th><code>BUILDKITE_REPO</code></th>
    <td>The repository of your pipeline. <p class="Docs__api-param-eg"><em>Example:</em> <code>"git@github.com:acme-inc/my-project.git"</code></p></td>
  </tr>
  <tr>
    <th><code>BUILDKITE_SOURCE</code></th>
    <td>The source of the event that created the build. <p class="Docs__api-param-eg"><em>Example:</em> <code>"webhook"</code>, <code>"api"</code>, <code>"ui"</code>, <code>"trigger_job"</code>, or <code>"schedule"</code></p></td>
  </tr>
  <tr>
    <th><code>BUILDKITE_TAG</code></th>
    <td>The name of the tag being built, if this build was triggered from a tag. <p class="Docs__api-param-eg"><em>Example:</em> <code>"v1.2.3"</code></p></td>
  </tr>
  <tr>
    <th><code>BUILDKITE_TIMEOUT</code></th>
    <td>The number of minutes until Buildkite automatically cancels this job, if a timeout has been specified. <p class="Docs__api-param-eg"><em>Example:</em> <code>"15"</code> for 15 minutes, or <code>"false"</code> if no timeout is set</td>
  </tr>
  <tr>
    <th><code>CI</code></th>
    <td>Always <code>"true"</code>.</td>
  </tr>
</tbody>
</table>

Bootstrap vars:
BUILDKITE_DISABLE_GIT_SUBMODULES
BUILDKITE_REFSPEC

## How environment variables do the thing

~~~
Job environment
~~~

Base Job environment (before being sent to the agent, this is what you see in the rest api when you look at the job):
project, step and build env - via bk.com, user supplied
an env is created for a job, which is then merged with project, step (defined in the pipeline settings page, or from yaml), and build env vars (from the ui or from the rest api)
bk's set env is merged with user supplied from the build, then the step, then the project
bk env (most important, not overridden by the following bits) > build > step > project (least important, can be overridden by everything else)
bk set env: https://github.com/buildkite/buildkite/blob/master/app/models/job/environment.rb#L32


Pipeline upload (has the opportunity to add stuff to the base job before it's sent to the agent):
setting the env at the top of the yaml (applied to each step)
step level env, but set in the yaml rather than the ui

Trigger step:
env set in a trigger step end up as build env on the newly created build
you don't get the 'all steps env' from the top of the yaml on a trigger step, only what you choose to set in that trigger step's env attribute

~~~
Agent environment
~~~

agent process has an environment:
- os env
- stuff you've set for your agent
- inherited stuff from how you started the process

agent start docs have a list of variables/flags you can set
also look here: https://github.com/buildkite/agent/blob/master/clicommand/agent_start.go

~~~
Job is accepted by an agent
~~~

copy in the job's environment from bk.com
merge in some of the agent's env vars (i.e. not the registration token, it's given it's own access token)
adds some new agent vars (describes the agent that the job is running in)
vars to tell the bootstrap and other commands what to do
bootstrap is started with the env supplied by the agent
bootstrap adds its own env vars
bootstrap runs all the hooks (plugin, environment etc.) 
vars from hooks are merged in to the bootstrap env, these can override anything that exists in the env (be careful with these, they're powerful)

Tada! This is the env your command runs in.

If you change the env in the job script, it will only survive as long as the script is running. 

## Defining your own

You can define environment variables in your jobs in a few ways, depending on the nature of the value being set:

* Pipeline settings — for values that are not secret.
* [Build pipeline configuration](/docs/pipelines/command-step) — for values that are not secret.
* An `environment` or `pre-command` [agent hook](/docs/agent/hooks) — for values that are secret or agent-specific.

## Writable variables for specific purposes:

Using S3 (see our [S3 docs](/docs/agent/cli-artifact#using-your-own-s3-bucket) for more information):
BUILDKITE_ARTIFACT_UPLOAD_DESTINATION
BUILDKITE_S3_DEFAULT_REGION
BUILDKITE_S3_ACCESS_KEY_ID
BUILDKITE_S3_SECRET_ACCESS_KEY
BUILDKITE_S3_ACL

Using Google Cloud (see our [google cloud docs](/docs/agent/cli-artifact#using-your-own-private-google-cloud-bucket) for more information):
BUILDKITE_ARTIFACT_UPLOAD_DESTINATION
BUILDKITE_GS_* <Needs more info>


# Sharing Data Between Steps

There are two ways to share data between steps in a build: artifacts and meta-data. 

- both are available org wide?

<%= toc %>

## Build Artifacts

Artifacts are any files that are generated during a build step. Buildkite can host these files for you in the Buildkite artifact store. 
 
You can upload and download from the store using our REST API. There are limits to how much you can upload, and to how long your files can be kept for. You can also use our command-line tool to upload your artifacts to a personal store.  

Using a personal store like Amazon S3 is recommended when:

- you need to persist the artifact longer than the build
- your artifacts contain sensitive information

For a short introduction to uploading and downloading from the Buildkite artifact store, see the [Using Build Artifacts](/docs/builds/artifacts) page.

For more technical information about the `buildkite-agent artifact` command and what you can do with it, see the [artifact command-line reference](/docs/agent/cli-artifact). This page also provides instructions for using your own S3 bucket.

## Build Meta-data

Meta-data are key/value pairs that you set in build steps. 

- key value store
- text only, but the cli will take output from commands and scripts and take it as a string for the value
- can set and get data from it
- is available across agents as well as build steps, even if the agents are running on different platforms 

- use the meta-data cli command in scripts to add arbitrary data to the key/value store
- can also use the 'agent' attribute on a command step to add meta-data specifically for agent targetting

- block steps use the meta-data store to hold the data entered into form fields

- trigger steps use the meta_data attribute to set meta-data on the new build you are creating 

- for usage examples, see the Using Build Meta-data page 
- to see the cli reference, go to the cli-meta-data page

## Common Use Cases

### Use artifacts
- node_modules
- logs
- build files/tars

- you could also use artifacts for:

### Use meta-data
- agent targetting
- release version

- you could also use meta-data for:

# Deployments with Buildkite

There are many ways to set up both manual and continuous deployment workflows using Buildkite.

<%= toc %>

## Single deployment steps

Adding a deployment step that runs after your tests pass is the simplest way to deploy from a Buildkite pipeline.

The following example shows how to set up continuous deployment using a single step that runs after the tests pass. It uses [step-level branch filtering](/docs/pipelines/branch-configuration#step-level-branch-filtering) to perform continuous deployment on `master` branch builds, and uses [concurrency limiting](/docs/pipelines/controlling-concurrency) to ensure only one deployment runs at a time.

```yml
steps:
  - label: ":hammer:"
    command: "scripts/test"
  
  - wait
  
  - label: ":rocket:"
    command: "scripts/deploy"
    branches: "master"
    concurrency_group: "my-app-deploy"
    concurrency_limit: 1
```

<screenshot of a deploy step>

## Dedicated deployment pipelines

Creating dedicated deployment pipelines, separate to your test pipelines, makes it easier to:

* Separate deployment failures from test failures
* Separate test and deployment pipeline.yml files
* Re-run failed deployments
* Simplify adding rollback steps
* Use teams for role based access control
* Whitelist deploy pipelines in agent hooks

For example, the following "My App" test pipeline will trigger a deployment build whenever a master test build passes:

```yml
steps:
  - label: ":hammer:"
    command: "scripts/test"

  - wait

  - label: ":rocket:"
    trigger: "my-app-deployment"
    branches: "master"
```

The deployment pipeline is configured to pipeline upload the following `.buildkite/pipeline.deploy.yml` file:

```yml
steps:
  - label: ":rocket:"
    command: "scripts/deploy"
    branches: "master"
    concurrency_group: "my-app-deploy"
    concurrency_limit: 1
```

<screenshot of a deploy pipeline>

## Gated deployments



## External deployment systems

- can use anything for deployments like spinnaker, shipit, samson
- k8s, heroku, ecs, github deployments
- useful [plugins](/docs/pipelines/plugins) for deployments
- check out our plugins page for deploy things, if there's no plugin for your service/platform, add one!
- code sample of a deploy step using one of the above tools
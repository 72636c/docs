# Pipelines

Pipelines are the top level containers for modelling and defining your workflows. Connecting pipelines to your source control allows you to run builds when your code changes. You can run anything with a Buildkite pipeline! ðŸš€

<%= toc %>

## What's a pipeline made of?

A pipeline is a template for builds, and is made up of three key parts.

**Build** - the concrete version of a pipeline, a build creates jobs to run each of the steps defined in the pipeline

**Step** - template of a single activity that exists in a pipeline

**Job** - the concrete version of steps, jobs are what actually run each activity during your build. These are run independently, and aren't aware of other jobs.   

## Is this just for running tests and deploying code?

Not at all! You can do all kinds of exciting things with pipelines, like generating static sites, running data imports, provisioning servers, and automating app store submissions! You can even use pipelines to [create other pipelines](docs/guides/uploading-pipelines) ðŸ˜±



## The Pipelines page

Once you've set up a few pipelines and have run some builds, you can see an overview of them on the Pipelines page. Each pipeline has a set of metrics to give you an overview of its health and performance.

<%= image "full-page.gif", width: 2080/2, height: 1040/2, alt: "Build reliability UI screenshot" %>

### Build health

A visual indication of your pipeline's health! This icon is based on the most recently completed build. The build health icons give you a neat overview of the current health of your pipelines.  

<%= image "build-status.png", width: 728/2, height: 440/2, alt: "Build health icon UI screenshot" %>

### Build history

The build history visualises the last 30 builds that have been run on your default branch. The height of each bar reflects the build's running time, and its status is represented by its colour and in the tooltip on hover.

<%= image "graphs.png", width: 728/2, height: 440/2, alt: "Build history visualisation UI screenshot" %>

### Speed

The speed of your pipeline is calculated from the average of your 30 most recent builds. This helps you keep an eye on your pipeline's speed, and compare performance between pipelines.

<%= image "speed.png", width: 728/2, height: 440/2, alt: "Build health icon UI screenshot" %>

### Reliability

The reliability of your pipeline is a calculation based on passing vs failing builds over the last 30 days. This metric helps you to understand the overall stability of your pipelines. 

<%= image "reliability.png", width: 728/2, height: 440/2, alt: "Build reliability UI screenshot" %>

### Builds per week

Builds per week is calculated on the average number of builds per week, <ACTUAL STAT>. 

<%= image "frequency.png", width: 728/2, height: 440/2, alt: "Build reliability UI screenshot" %>

### Starring pipelines

You can keep your most used pipelines at the top of the page by clicking the star on the far right of any pipeline. 

<%= image "favorite.png", width: 728/2, height: 440/2, alt: "Build reliability UI screenshot" %>

### Customizing the page

Your pipeline's name, description, its repository, and your default branch are all editable! After you've clicked on a pipeline, the settings button is in the top right corner. 

<%= image "settings.png", width: 728/2, height: 440/2, alt: "Build reliability UI screenshot" %>

The display settings can be found in the `Pipeline Settings` section. Adding a description for your pipeline is optional, but name, repository, and default branch are all required.   



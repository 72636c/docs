# Buildkite Agent Configuration

Every agent installer comes with a configuration file. You can find the location of your configuration file in your platform’s installation documentation.

<%= toc %>

## Configuration Settings

* `token` - The agent token from your organization’s Agents page
* `name` - The name of the agent - Default: `"%hostname-%n"`
* `priority` - The priority of the agent (higher priorities are assigned work first, null is assigned last) - Default: `null`
* `meta-data` - Meta data for the agent - Default: `"queue=default"`
* `meta-data-ec2-tags` - Populate the meta data from the current instances EC2 Tags - Default: `false`
* `build-path` - Path to where the builds will run from - Default: (depends on platform)
* `hooks-path` - Directory where the global hook scripts are found - Default: (depends on platform)
* `no-pty` - Do not run jobs within a pseudo terminal - Default: `false`
* `no-automatic-ssh-fingerprint-verification` - Do not automatically verify SSH fingerprints for first-time checkouts - Default: `false`
* `no-command-eval` - Do not allow this agent to run arbitrary console commands - Default: `false`
* `debug` - Enable debug mode - Default: `false`
* `no-color` - Do not show colors in logging - Default: `false`

## Example Configuration File

```sh
token="24db61df8338027652b24aadf82dd483b016eef98fcd332815"
name="my-app-%n"
meta-data="ci=true,docker=true"
debug=true
```

## Environment Variables

All agent options can also be specified as environment variables when starting the agent. They must be prefixed with `BUILDKITE_` and all dashes (`-`) replaced by underscores (`_`). For example:

```sh
BUILDKITE_META_DATA="queue=deploy,host=$(hostname)" buildkite-agent start
```

These variables cannot be modified through the Buildkite web interface, API or via pipeline upload for security reasons. You may be able to modify some of these variables within [hook scripts](/docs/agent/hooks), depending on when the hook script is run.

### Git clone flags

If you wish to include extra flags in the `git clone` command used by the Buildkite Agent you can specify a `BUILDKITE_GIT_CLONE_FLAGS` environment variable. This cannot be set in the agent configuration file. By default it is set to `-v`. For example, to create shallow clones:

```
BUILDKITE_GIT_CLONE_FLAGS="--depth=1" buildkite-agent start
```

### Git clean flags

You can modify the `git clone` flags used by the Buildkite Agent during checkout using the `BUILDKITE_GIT_CLEAN_FLAGS` environment variable. This cannot be set in the agent configuration file. By default it is set to `-fdq`. You can force the agent to clean all files from a Git checkout by including `-x`. For example:

```sh
BUILDKITE_GIT_CLEAN_FLAGS="-fdqx" buildkite-agent start
```

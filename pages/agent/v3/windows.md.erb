# Installing Buildkite Agent on Windows

The Buildkite Agent is supported on Windows 8, Windows Server 2012, and newer.

{:toc}

## Automated install with PowerShell

You'll need to run the automated installer within PowerShell with Administrative Privileges.

To start a PowerShell session as an Administrator:

1. Open the Start menu and type "powershell"
2. Highlight "Windows PowerShell" in the results
3. Press CTRL+SHIFT+ENTER (you'll be prompted to allow this app to make changes)

Once you're in an escalated PowerShell session, you can run this script to install the latest version of the Agent:

```shell
$env:buildkiteAgentToken = "my_token"
Set-ExecutionPolicy Bypass -Scope Process -Force
iex ((New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/buildkite/agent/main/install.ps1'))
```

## Manual installation

1. Download the latest Windows release from <a href="https://github.com/buildkite/agent/releases">Buildkite Agent releases on GitHub</a>
2. Extract the files to a directory of your choice (we recommend `C:\buildkite-agent`)
3. Edit `buildkite-agent.cfg` and add your [agent token](/docs/agent/v3/tokens)
4. Run `buildkite-agent.exe start` from a command prompt

## SSH key configuration

Copy or generate SSH keys into your `.ssh` directory. For example, typing the following into Git Bash generates a new private key which you can add to your source code host:

```bash
$ ssh-keygen -t rsa -b 4096 -C "build@myorg.com"
```

See the [Agent SSH Keys](/docs/agent/v3/ssh-keys) documentation for more details.

## File locations

* Configuration: `C:\buildkite-agent\buildkite-agent.cfg`
* Hooks: `C:\buildkite-agent\hooks`
* Builds: `C:\buildkite-agent\builds`
* SSH keys: `%USERPROFILE%\.ssh`

## Configuration

The configuration file is located at `C:\buildkite-agent\buildkite-agent.cfg`. See the [configuration documentation](/docs/agent/v3/configuration) for an explanation of each configuration setting.

There are two options to be aware of for this initial setup:

* Set your [agent token](/docs/agent/v3/tokens), if you did not set it as an environment variable during installation.
* You may need to use the `shell` config option. On Windows, Buildkite defaults to using Batch. If you want to use PowerShell or Bash, you must point Buildkite to the correct shell. For example, to use PowerShell:

    ```cfg
    shell="<path-to-powershell-executable"
    ```

    Note that this allows you to run a PowerShell script, but that your build hooks must still be either `.bat` files or `.sh` files (if you have access to Git for Windows). Refer to [Hooks - Hooks on Windows](/docs/agent/v3/hooks/#Hooks-on-Windows) for more information.

## Upgrading

Rerun the install script.

## Git for Windows

While the agent will work without Git installed, you will require [Git for Windows](https://gitforwindows.org/) to interact with Git or SSH. Git for Windows also includes Bash and a variety of standard linux tools which are frequently required for [plugins](/docs/plugins).

## Running as a service

The simplest way to run buildkite-agent as a service is to use a third-party tool like [nssm](https://nssm.cc/). Once installed, you can either run the GUI and configure manually, or create the service using the command-line:

```
nssm install buildkite-agent "C:\buildkite-agent\bin\buildkite-agent.exe" "start"
nssm set buildkite-agent AppStdout "C:\buildkite-agent\buildkite-agent.log"
nssm set buildkite-agent AppStderr "C:\buildkite-agent\buildkite-agent.log"

nssm status buildkite-agent
# Expected output: SERVICE_STOPPED
nssm start buildkite-agent
nssm status buildkite-agent
```

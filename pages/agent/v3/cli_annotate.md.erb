# buildkite-agent annotate

The Buildkite Agentâ€™s `annotate` command allows you to add additional
information to Buildkite build pages.

<%= toc %>

## Creating an annotation

```
$ buildkite-agent annotate --help
Usage:

   buildkite-agent annotate <file> [arguments...]

Description:

   Build annotations allow you to customize the Buildkite build interface to
   show information that may surface from your builds. Some examples include:

   - Links to artifacts generated by your jobs
   - Test result summaries
   - Graphs that include analysis about your codebase
   - Helpful information for team members about what happened during a build

   Annotations can be written in either Markdown or HTML.

   You can update an existing annotation's body by running the annotate command
   again and provide the same context as the one you want to update. Or if you
   leave context blank, it will use the default context.

   You can also just update the style of an existing annotation by omitting the
   body and just providing a new style value.

Example:

   $ buildkite-agent annotate "All tests passed! \:rocket\:"
   $ cat annotation.md | buildkite-agent annotate --style "warning"
   $ buildkite-agent annotate --style "success" --context "junit"
   $ ./script/dynamic_annotation_generator | buildkite-agent annotate --style "success"

Options:

   --context value             The context of the annotation used to differentiate this annotation from others [$BUILDKITE_ANNOTATION_CONTEXT]
   --style success             The style of the annotation (success, `info`, `warning` or `error`) [$BUILDKITE_ANNOTATION_STYLE]
   --append                    Append to the body of an existing annotation [$BUILDKITE_ANNOTATION_APPEND]
   --job value                 Which job should the annotation come from [$BUILDKITE_JOB_ID]
   --agent-access-token value  The access token used to identify the agent [$BUILDKITE_AGENT_ACCESS_TOKEN]
   --endpoint value            The Agent API endpoint (default: "https://agent.buildkite.com/v3") [$BUILDKITE_AGENT_ENDPOINT]
   --no-color                  Don't show colors in logging [$BUILDKITE_AGENT_NO_COLOR]
   --debug                     Enable debug mode [$BUILDKITE_AGENT_DEBUG]
   --debug-http                Enable HTTP debug mode, which dumps all request and response bodies to the log [$BUILDKITE_AGENT_DEBUG_HTTP]
```

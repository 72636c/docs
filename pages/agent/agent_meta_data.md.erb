# Buildkite Agent Meta-data

Each agent has meta-data tags which can be used to group and target the agents in your build pipelines. This way you're free to dynamically scale your agents and target them based on their capabilities rather than maintaining a static list.

<%= toc %>

## Setting Metadata

To set an agentâ€™s meta-data you can set it in the configuration file:

```
meta-data="docker=true,ruby2=true"
```

or with the `--meta-data` command line flag:

```
buildkite-agent start --meta-data "docker=true" --meta-data "ruby2=true"
```

or with the `BUILDKITE_AGENT_META_DATA` an environment variable:

```
env BUILDKITE_AGENT_META_DATA="docker=true,ruby2=true" buildkite-agent start
```

## Agent Targeting

Once you've started agents with metadata you can target them in the build pipeline using agent query rules.

Here's an example of targetting agents that are running with the meta-data value `postgres` of `1.9.4`:

<%= image 'agent-selector-matching-1.png', size: '553x353', alt: 'Agent Selector showing a single match' %>

To do this from [uploaded pipeline.yml](/docs/agent/build-pipelines) you would do:

```yaml
steps:
  - command: "script.sh"
    agents:
      postgres: "1.9.4"
```

You can also match for any agent with a `postgres` meta-data by omitting the value after the `=` sign, or by using `*`, for example:

<%= image 'agent-selector-matching-2.png', size: '553x353', alt: 'Agent Selector showing a single match' %>

To do this from an [uploaded pipeline.yml](/docs/agent/build-pipelines) you would do:

```yaml
steps:
  - command: "script.sh"
    agents:
      postgres: '*'
```

Partial wildcard matching (e.g. `postgres=1.9*` or `postgres=*1.9`) is not yet supported.

## The queue tag

The `queue` meta-data tag works differently from other tags, and can be used for isolating jobs and agents. See the [agent queues documentation](queues) for more information about using queues.

# Buildkite Plugins

Add plugins to [command steps](/docs/pipelines/command-step) in your YAML pipeline to add functionality to Buildkite. Plugins can do things like execute steps in Docker containers, read values from a credential store, or add test summary annotations to builds.

<%= image "plugins-overview.png", width: 647, height: 221, alt: "Screenshot of a pipeline step with a plugin, and the plugin from the directory", class: "no-decoration" %>

<%= toc %>

## What is a plugin?

A plugin is a Git repository that overrides or extends a [command step](/docs/pipelines/command-step)’s behaviour using one or more [hooks](/docs/agent/v3/hooks). To use a plugin, you reference it in your pipeline YAML configuration, and when that step is run your agent will clone and execute each of the plugin’s [hooks](/docs/agent/v3/hooks).

Plugins can be open source and available for anyone to use, or private repositories available only to your organization and agents. Plugins can be hosted and referenced via [a number of sources](/docs/plugins/using#plugin-sources).

Some plugins allow configuration. This is usually defined in your `pipeline.yml` file, and is read by the agent before the plugin hooks are run. See each plugin's readme for detailed configuration and usage instructions. 

## Finding plugins

In the [Buildkite Plugin Directory](/docs/plugins/directory) you can find all the plugins maintained by Buildkite, as well as plugins from third party developers. 

## Creating a plugin

See the the [Writing Plugins](/docs/plugins/writing) documentation for step-by-step instructions on how to create a plugin. Plugins can be open source, and published to the [Plugin Directory](/docs/plugins/directory), or kept in private repositories that only your agents can access.
# Overview

Plugins provide a way to extend the functionality that Buildkite natively offers. They act as a external repository of [Hooks](/docs/agent/v3/hooks) that are referenced from your `pipeline.yml` file, and are downloaded and run as part of your build.

Plugins can be hosted on GitHub, BitBucket or a private git repository, and are automatically fetched as required. See the [Sources](/docs/plugins/using-plugins) section of the Using Plugins guide for how you can host your own.

Buildkite offers a collection of useful plugins to get you started, including a [Docker Compose plugin](https://github.com/buildkite-plugins/docker-compose-buildkite-plugin), [Junit Annotate plugin](https://github.com/buildkite-plugins/junit-annotate-buildkite-plugin), and the [Library Example plugin](https://github.com/buildkite-plugins/library-example-buildkite-plugin). In the [Buildkite Plugin Directory](https://buildkite.com/plugins) you can find all the offical plugins as well as the top plugins from third party developers. 

## How plugins work

At the most basic, plugins are a snippet of code stored in [hooks](/docs/agent/v3/hooks) files that the Agent can access directly. When you add a plugin to a buildkite command step, that code is read by the Agent before the commands or scripts are executed.

Some plugins allow configuration, this is usually defined in your pipeline.yml file and is read by the agent before the plugin hooks are run.

There are two main types of plugins:

- stuff you want to run before/after you run your script (can define any of the available hooks like pre-command, command, post-command etc.) (login to a service, build an image, pull down some packages or an artifact)
- a repo of commands: commands from the files can be referenced in your scripts, it works in a similar way to an import statement

- automate a workflow?

## Common use cases

Below are some common use cases that can be automated with plugins. Existing plugins that perform these actions are linked to:

- Building docker images for use in subsequent steps ([Docker plugin](https://github.com/buildkite-plugins/docker-buildkite-plugin))
- Running steps in containers ([Docker](https://github.com/buildkite-plugins/docker-compose-buildkite-plugin))
- Running steps in vms or clusters ([Anka](https://github.com/chef/anka-buildkite-plugin),[Kubernetes](https://github.com/EmbarkStudios/k8s-buildkite-plugin))
- Assuming a role before running a script ([Buildkite users](https://github.com/mgoodings/assume-identity-buildkite-plugin))
- Logging in to a service ([ECR](https://github.com/buildkite-plugins/ecr-buildkite-plugin), [Docker](https://github.com/buildkite-plugins/docker-login-buildkite-plugin), [Azure](https://github.com/cevoaustralia/azure-login-buildkite-plugin))
- Downloading packages ([Artifacts](https://github.com/buildkite-plugins/artifacts-buildkite-plugin), [S3 objects](https://github.com/coyainsurance/s3-cache-buildkite-plugin), )

For more ideas of what can be done with plugins, check out the [Plugins Directory](https://buildkite.com/plugins).



